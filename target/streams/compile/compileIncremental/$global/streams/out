[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(C:\Users\A674634\Desktop\scala\playProjects\LearningModuleAkka\src\main\scala\net\ajn\credentialutil\client\learning\impl\CreateLearningRequest.scala, C:\Users\A674634\Desktop\scala\playProjects\LearningModuleAkka\src\main\scala\net\ajn\credentialutil\client\learning\impl\GenerateToken.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(C:\Users\A674634\Desktop\scala\playProjects\LearningModuleAkka\src\main\scala\net\ajn\credentialutil\Main.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(Main, Main.LearningTokenRequest)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(Main, Main.LearningTokenRequest)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(C:\Users\A674634\Desktop\scala\playProjects\LearningModuleAkka\src\main\scala\net\ajn\credentialutil\client\learning\impl\CreateLearningRequest.scala, C:\Users\A674634\Desktop\scala\playProjects\LearningModuleAkka\src\main\scala\net\ajn\credentialutil\client\learning\impl\GenerateToken.scala, C:\Users\A674634\Desktop\scala\playProjects\LearningModuleAkka\src\main\scala\net\ajn\credentialutil\Main.scala)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 3 Scala sources to C:\Users\A674634\Desktop\scala\playProjects\LearningModuleAkka\target\scala-2.12\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 2b588b70 for Scala compiler version 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Program Files\Java\jdk1.8.0_191\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_191\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_191\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_191\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_191\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_191\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_191\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_191\jre\classes;C:\Users\A674634\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.12.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\A674634\Desktop\scala\playProjects\LearningModuleAkka\target\scala-2.12\classes;C:\Users\A674634\.ivy2\cache\com.typesafe.akka\akka-http_2.12\jars\akka-http_2.12-10.1.7.jar;C:\Users\A674634\.ivy2\cache\com.typesafe.akka\akka-http-core_2.12\jars\akka-http-core_2.12-10.1.7.jar;C:\Users\A674634\.ivy2\cache\com.typesafe.akka\akka-parsing_2.12\jars\akka-parsing_2.12-10.1.7.jar;C:\Users\A674634\.ivy2\cache\com.typesafe.akka\akka-stream_2.12\jars\akka-stream_2.12-2.5.19.jar;C:\Users\A674634\.ivy2\cache\com.typesafe.akka\akka-actor_2.12\jars\akka-actor_2.12-2.5.19.jar;C:\Users\A674634\.ivy2\cache\com.typesafe\config\bundles\config-1.3.3.jar;C:\Users\A674634\.ivy2\cache\org.scala-lang.modules\scala-java8-compat_2.12\bundles\scala-java8-compat_2.12-0.8.0.jar;C:\Users\A674634\.ivy2\cache\com.typesafe.akka\akka-protobuf_2.12\jars\akka-protobuf_2.12-2.5.19.jar;C:\Users\A674634\.ivy2\cache\org.reactivestreams\reactive-streams\jars\reactive-streams-1.0.2.jar;C:\Users\A674634\.ivy2\cache\com.typesafe\ssl-config-core_2.12\bundles\ssl-config-core_2.12-0.3.6.jar;C:\Users\A674634\.ivy2\cache\org.scala-lang.modules\scala-parser-combinators_2.12\bundles\scala-parser-combinators_2.12-1.1.1.jar;C:\Users\A674634\.ivy2\cache\io.circe\circe-core_2.12\jars\circe-core_2.12-0.11.1.jar;C:\Users\A674634\.ivy2\cache\io.circe\circe-numbers_2.12\jars\circe-numbers_2.12-0.11.1.jar;C:\Users\A674634\.ivy2\cache\org.typelevel\cats-core_2.12\jars\cats-core_2.12-1.5.0.jar;C:\Users\A674634\.ivy2\cache\org.typelevel\cats-macros_2.12\jars\cats-macros_2.12-1.5.0.jar;C:\Users\A674634\.ivy2\cache\org.typelevel\machinist_2.12\jars\machinist_2.12-0.6.6.jar;C:\Users\A674634\.ivy2\cache\org.scala-lang\scala-reflect\jars\scala-reflect-2.12.8.jar;C:\Users\A674634\.ivy2\cache\org.typelevel\cats-kernel_2.12\jars\cats-kernel_2.12-1.5.0.jar;C:\Users\A674634\.ivy2\cache\io.circe\circe-generic_2.12\jars\circe-generic_2.12-0.11.1.jar;C:\Users\A674634\.ivy2\cache\com.chuusai\shapeless_2.12\bundles\shapeless_2.12-2.3.3.jar;C:\Users\A674634\.ivy2\cache\org.typelevel\macro-compat_2.12\jars\macro-compat_2.12-1.1.1.jar;C:\Users\A674634\.ivy2\cache\io.circe\circe-parser_2.12\jars\circe-parser_2.12-0.11.1.jar;C:\Users\A674634\.ivy2\cache\io.circe\circe-jawn_2.12\jars\circe-jawn_2.12-0.11.1.jar;C:\Users\A674634\.ivy2\cache\org.typelevel\jawn-parser_2.12\jars\jawn-parser_2.12-0.14.1.jar;C:\Users\A674634\.ivy2\cache\io.circe\circe-config_2.12\jars\circe-config_2.12-0.6.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 1.419766988 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from net.ajn.credentialutil.client.learning.impl.CreateLearningRequest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(net.ajn.credentialutil.client.learning.impl.CreateLearningRequest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(net.ajn.credentialutil.client.learning.impl.CreateLearningRequest)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of net.ajn.credentialutil.client.learning.impl.GenerateToken: Set(UsedName(createRequest,[Default]), UsedName(CreateLearningRequest,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(config,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(net.ajn.credentialutil.client.learning.impl.CreateLearningRequest,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(createRequest,[Default]), UsedName(==,[Default]), UsedName(CreateLearningRequest,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(LearningTokenRequest,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(config,[Default]), UsedName(getClass,[Default]))) invalidates 2 classes due to The net.ajn.credentialutil.client.learning.impl.CreateLearningRequest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(createRequest,[Default]), UsedName(==,[Default]), UsedName(CreateLearningRequest,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(LearningTokenRequest,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(config,[Default]), UsedName(getClass,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(net.ajn.credentialutil.client.learning.impl.CreateLearningRequest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(net.ajn.credentialutil.client.learning.impl.GenerateToken)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from net.ajn.credentialutil.client.learning.impl.GenerateToken...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(net.ajn.credentialutil.client.learning.impl.GenerateToken)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(net.ajn.credentialutil.client.learning.impl.GenerateToken)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Main: Set(UsedName(getInstance,[Default]), UsedName(init,[Default]), UsedName(GenerateToken,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(net.ajn.credentialutil.client.learning.impl.GenerateToken,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(net;ajn;credentialutil;client;learning;impl;GenerateToken;init;,[Default]), UsedName(==,[Default]), UsedName(getInstance,[Default]), UsedName(init,[Default]), UsedName(ne,[Default]), UsedName(GenerateToken,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]))) invalidates 2 classes due to The net.ajn.credentialutil.client.learning.impl.GenerateToken has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(net;ajn;credentialutil;client;learning;impl;GenerateToken;init;,[Default]), UsedName(==,[Default]), UsedName(getInstance,[Default]), UsedName(init,[Default]), UsedName(ne,[Default]), UsedName(GenerateToken,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(net.ajn.credentialutil.client.learning.impl.GenerateToken)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from net.ajn.credentialutil.client.learning.impl.CreateLearningRequest.LearningTokenRequest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(net.ajn.credentialutil.client.learning.impl.CreateLearningRequest.LearningTokenRequest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(net.ajn.credentialutil.client.learning.impl.CreateLearningRequest.LearningTokenRequest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(net.ajn.credentialutil.client.learning.impl.CreateLearningRequest.LearningTokenRequest,ModifiedNames(changes = UsedName(tokenEndpoint,[Default]), UsedName(copy$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(grantType,[Default]), UsedName(stringifyRequestBody,[Default]), UsedName(finalize,[Default]), UsedName(contentType,[Default]), UsedName(authType,[Default]), UsedName(userId,[Default]), UsedName(equals,[Default]), UsedName(getProxy,[Default]), UsedName($init$,[Default]), UsedName(unapply,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(copy,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$1,[Default]), UsedName(!=,[Default]), UsedName(copy$default$6,[Default]), UsedName(net;ajn;credentialutil;client;learning;impl;CreateLearningRequest;LearningTokenRequest;init;,[Default]), UsedName(LearningTokenRequest,[Default]), UsedName(synchronized,[Default]), UsedName(clientId,[Default]), UsedName(notify,[Default]), UsedName(isInstanceOf,[Default]), UsedName(curried,[Default]), UsedName(productPrefix,[Default]), UsedName(tenantId,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(eq,[Default]), UsedName(copy$default$5,[Default]), UsedName(clientSecret,[Default]), UsedName(copy$default$4,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$7,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(apply,[Default]), UsedName(getClass,[Default]))) invalidates 1 classes due to The net.ajn.credentialutil.client.learning.impl.CreateLearningRequest.LearningTokenRequest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tokenEndpoint,[Default]), UsedName(copy$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(grantType,[Default]), UsedName(stringifyRequestBody,[Default]), UsedName(finalize,[Default]), UsedName(contentType,[Default]), UsedName(authType,[Default]), UsedName(userId,[Default]), UsedName(equals,[Default]), UsedName(getProxy,[Default]), UsedName($init$,[Default]), UsedName(unapply,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(copy,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$1,[Default]), UsedName(!=,[Default]), UsedName(copy$default$6,[Default]), UsedName(net;ajn;credentialutil;client;learning;impl;CreateLearningRequest;LearningTokenRequest;init;,[Default]), UsedName(LearningTokenRequest,[Default]), UsedName(synchronized,[Default]), UsedName(clientId,[Default]), UsedName(notify,[Default]), UsedName(isInstanceOf,[Default]), UsedName(curried,[Default]), UsedName(productPrefix,[Default]), UsedName(tenantId,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(eq,[Default]), UsedName(copy$default$5,[Default]), UsedName(clientSecret,[Default]), UsedName(copy$default$4,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$7,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(apply,[Default]), UsedName(getClass,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(net.ajn.credentialutil.client.learning.impl.CreateLearningRequest.LearningTokenRequest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Main...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Main,ModifiedNames(changes = UsedName(config,[Default]), UsedName(LearningTokenRequest,[Default]))) invalidates 1 classes due to The Main has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(config,[Default]), UsedName(LearningTokenRequest,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Main.LearningTokenRequest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Main.LearningTokenRequest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Main.LearningTokenRequest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Main.LearningTokenRequest,ModifiedNames(changes = UsedName(tokenEndpoint,[Default]), UsedName(copy$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(grantType,[Default]), UsedName(stringifyRequestBody,[Default]), UsedName(finalize,[Default]), UsedName(contentType,[Default]), UsedName(authType,[Default]), UsedName(userId,[Default]), UsedName(equals,[Default]), UsedName(getProxy,[Default]), UsedName($init$,[Default]), UsedName(unapply,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(copy,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$1,[Default]), UsedName(!=,[Default]), UsedName(copy$default$6,[Default]), UsedName(LearningTokenRequest,[Default]), UsedName(synchronized,[Default]), UsedName(clientId,[Default]), UsedName(notify,[Default]), UsedName(isInstanceOf,[Default]), UsedName(curried,[Default]), UsedName(productPrefix,[Default]), UsedName(tenantId,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(eq,[Default]), UsedName(Main;LearningTokenRequest;init;,[Default]), UsedName(copy$default$5,[Default]), UsedName(clientSecret,[Default]), UsedName(copy$default$4,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$7,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(apply,[Default]), UsedName(getClass,[Default]))) invalidates 1 classes due to The Main.LearningTokenRequest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tokenEndpoint,[Default]), UsedName(copy$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(grantType,[Default]), UsedName(stringifyRequestBody,[Default]), UsedName(finalize,[Default]), UsedName(contentType,[Default]), UsedName(authType,[Default]), UsedName(userId,[Default]), UsedName(equals,[Default]), UsedName(getProxy,[Default]), UsedName($init$,[Default]), UsedName(unapply,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(copy,[Default]), UsedName(ne,[Default]), UsedName(copy$default$3,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$1,[Default]), UsedName(!=,[Default]), UsedName(copy$default$6,[Default]), UsedName(LearningTokenRequest,[Default]), UsedName(synchronized,[Default]), UsedName(clientId,[Default]), UsedName(notify,[Default]), UsedName(isInstanceOf,[Default]), UsedName(curried,[Default]), UsedName(productPrefix,[Default]), UsedName(tenantId,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(eq,[Default]), UsedName(Main;LearningTokenRequest;init;,[Default]), UsedName(copy$default$5,[Default]), UsedName(clientSecret,[Default]), UsedName(copy$default$4,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$7,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(apply,[Default]), UsedName(getClass,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Main.LearningTokenRequest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
